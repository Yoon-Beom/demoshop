<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.docmall.basic.admin.product.AdProductMapper">
    <!--
        ============================
        [ 상품 등록(INSERT) ]
        ============================
        - ProductVO의 필드를 이용해 상품을 DB에 저장합니다.
    -->
    <insert id="pro_insert" parameterType="com.docmall.basic.admin.product.ProductVO">
        insert into 
            product_tbl(
                cate_code, pro_name,
                pro_price, pro_discount,
                pro_publisher, pro_content,
                pro_up_folder, pro_img,
                pro_amount, pro_buy
            ) 
	        values(
	            #{cate_code}, #{pro_name},
	            #{pro_price}, #{pro_discount},
	            #{pro_publisher}, #{pro_content},
	            #{pro_up_folder}, #{pro_img},
	            #{pro_amount}, #{pro_buy}
	        )
    </insert>

    <!--
        ============================
        [ 상품 목록 조회(검색/페이징) ]
        ============================
        - SearchCriteria를 이용한 검색/페이징 처리
        - <include refid="search"/>로 동적 검색 조건 삽입
    -->
    <select id="pro_list"
            resultType="com.docmall.basic.admin.product.ProductVO"
            parameterType="com.docmall.basic.common.utils.SearchCriteria">
        select 
            pro_num, cate_code,
            pro_name, pro_price,
            pro_discount, pro_publisher,
            pro_content, pro_up_folder,
            pro_img, pro_amount,
            pro_buy, pro_review,
            pro_date, pro_updatedate
        from 
            product_tbl
        where
            pro_num > 0
            <include refid="search"/>
        limit #{pageStart}, #{perPageNum}
    </select>

    <!--
        ============================
        [ 전체 상품 개수(검색 포함) ]
        ============================
        - 페이징 처리를 위한 전체 행 수 조회
    -->
    <select id="getTotalCount" resultType="int">
        select count(*)
        from product_tbl
        where pro_num > 0
        <include refid="search"/>
    </select>

    <!--
        ============================
        [ 동적 검색 조건 SQL 조각 ]
        ============================
        - searchType에 따라 검색 컬럼 동적 변경
        - SearchCriteria의 searchType, keyword 사용
    -->
    <sql id="search">
        <if test="searchType != null">
            <if test="searchType == 'n'.toString()">
                and pro_name like concat('%', #{keyword}, '%')
            </if>
            <if test="searchType == 'c'.toString()">
                and pro_num like concat('%', #{keyword}, '%')
            </if>
            <if test="searchType == 'p'.toString()">
                and pro_publisher like concat('%', #{keyword}, '%')
            </if>
            <if test="searchType == 'np'.toString()">
                and (
                    pro_name like concat('%', #{keyword}, '%')
                    or pro_publisher like concat('%', #{keyword}, '%')
                )
            </if>
        </if>
    </sql>

    <!--
        ============================
        [ 선택 상품 일괄 삭제(번호 배열) ]
        ============================
        - pro_num_arr: 삭제할 상품 번호 배열(List/Array)
    -->
    <delete id="pro_sel_delete_2">
        delete from product_tbl
        where pro_num in
        <foreach collection="pro_num_arr" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <!--
        ============================
        [ 선택 상품 일괄 삭제(이름+번호 배열) ]
        ============================
        - pro_name과 번호 배열이 모두 일치하는 상품만 삭제
    -->
    <delete id="pro_sel_delete_3">
        delete from product_tbl
        where pro_name = #{pro_name}
        and pro_num in
        <foreach collection="pro_num_arr" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <!--
        ============================
        [ 상품 상세 조회(수정 폼용) ]
        ============================
        - 상품 번호로 상세 정보 조회
    -->
    <select id="pro_edit_form" resultType="com.docmall.basic.admin.product.ProductVO">
        select 
            pro_num, cate_code, pro_name, pro_price, pro_discount, pro_publisher, pro_content,
            pro_up_folder, pro_img, pro_amount, pro_buy, pro_date, pro_updatedate
        from 
            product_tbl
        where 
            pro_num = #{pro_num}
    </select>

    <!--
        ============================
        [ 상품 정보 수정(UPDATE) ]
        ============================
        - ProductVO의 필드를 이용해 상품 정보 수정
        - pro_updatedate는 now()로 자동 갱신
    -->
    <update id="pro_edit_ok" parameterType="com.docmall.basic.admin.product.ProductVO">
        update product_tbl
        set 
            cate_code = #{cate_code},
            pro_name = #{pro_name},
            pro_price = #{pro_price},
            pro_discount = #{pro_discount},
            pro_publisher = #{pro_publisher},
            pro_content = #{pro_content},
            pro_up_folder = #{pro_up_folder},
            pro_img = #{pro_img},
            pro_amount = #{pro_amount},
            pro_buy = #{pro_buy},
            pro_updatedate = now()
        where 
            pro_num = #{pro_num}
    </update>

    <!--
        ============================
        [ 상품 단건 삭제(번호로) ]
        ============================
        - 상품 번호로 삭제
    -->
    <delete id="pro_delete" parameterType="Integer">
        delete from product_tbl
        where pro_num = #{pro_num}
    </delete>
</mapper>
