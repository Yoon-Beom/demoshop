# =========================
# 애플리케이션 기본 설정
# =========================

# Spring Boot 애플리케이션 이름 (Actuator, 로그 등에서 사용됨)
spring.application.name=ezenshop

# 내장 Tomcat 서버 포트 (기본 8080 → 8888로 변경)
# 포트 충돌 방지 및 명확한 구분을 위해 변경
server.port=8888

# =========================
# 데이터베이스 연결 설정
# =========================

# --- 배포용(MySQL 표준 드라이버) ---
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.datasource.url=jdbc:mysql://localhost:3306/testdb?serverTimezone=UTC

# --- 개발용(SQL 로그 추적용 log4jdbc 드라이버) ---
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:mysql://localhost:3306/ezenshop?serverTimezone=UTC

# DB 접속 계정 정보 (로컬 개발환경 기준)
spring.datasource.username=ezen
spring.datasource.password=1234

# log4jdbc란?
# - SQL 실행 로그를 보기 쉽게 출력해주는 JDBC 드라이버 래퍼입니다.
# - 개발/디버깅 시 쿼리 로그 확인에 매우 유용합니다.
# - 공식 문서: https://github.com/arthurblake/log4jdbc

# =========================
# MyBatis 설정
# =========================

# MyBatis 매퍼 XML 파일 위치 지정
# - src/main/resources/mapper/*.xml 파일들을 자동으로 인식
mybatis.mapper-locations=classpath:/mapper/*.xml

# =========================
# 파일 업로드(멀티파트) 설정
# =========================

# Spring Boot 3.0 이상에서는 파일 업로드 기능을 자체 지원함
spring.servlet.multipart.enabled=true

# 업로드 임시 파일 저장 경로 (서버의 특정 폴더)
spring.servlet.multipart.location=C:/Dev/upload/pds

# 파일 1개의 최대 크기 제한
spring.servlet.multipart.max-file-size=10MB

# 전체 요청의 최대 파일 크기 제한
spring.servlet.multipart.max-request-size=100MB

# 실제 업로드 파일 저장 경로(상품 이미지 등)
com.docmall.upload.path=C:/Dev/upload/pds

# CKEditor에서 사용하는 상품 설명 이미지 저장 경로
com.docmall.upload.ckeditor.path=C:/Dev/upload/ckeditor

# =========================
# 타임리프(Thymeleaf) 설정
# =========================

# 개발 중에는 아래 옵션을 사용해 캐시를 끄면, 템플릿 수정이 즉시 반영됨
# spring.thymeleaf.cache=false

# =========================
# 추가 설정 예시 (참고)
# =========================

# # 한글 인코딩 문제 방지 (MySQL/HikariCP 사용 시)
# # spring.datasource.hikari.connection-init-sql=SET NAMES utf8mb4

# # JPA 사용 시 (현재 프로젝트는 MyBatis 기반)
# # spring.jpa.show-sql=true
# # spring.jpa.hibernate.ddl-auto=update

